# Generated by Django 4.2.10 on 2025-10-17 20:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('order_book', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash_balance', models.DecimalField(decimal_places=2, default=100000.0, max_digits=20)),
                ('buying_power', models.DecimalField(decimal_places=2, default=100000.0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BacktestRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('strategy_code', models.TextField(help_text='Python code for the trading strategy')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('initial_capital', models.DecimalField(decimal_places=2, default=100000.0, max_digits=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BacktestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('losing_trades', models.IntegerField(default=0)),
                ('total_return', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_return_percent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sharpe_ratio', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('max_drawdown', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_drawdown_percent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('win_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('avg_win', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('avg_loss', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('profit_factor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('trades_data', models.JSONField(default=list, help_text='List of all trades executed')),
                ('equity_curve', models.JSONField(default=list, help_text='Daily equity values')),
                ('backtest_run', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='order_book.backtestrun')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('ORDER_CREATED', 'Order Created'), ('ORDER_CANCELLED', 'Order Cancelled'), ('ORDER_FILLED', 'Order Filled'), ('ORDER_REJECTED', 'Order Rejected'), ('TRADE_EXECUTED', 'Trade Executed'), ('POSITION_OPENED', 'Position Opened'), ('POSITION_CLOSED', 'Position Closed'), ('PORTFOLIO_UPDATED', 'Portfolio Updated'), ('RISK_LIMIT_VIOLATED', 'Risk Limit Violated'), ('USER_LOGIN', 'User Login'), ('USER_LOGOUT', 'User Logout')], max_length=50)),
                ('details', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('size', models.DecimalField(decimal_places=2, max_digits=15)),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order_book.asset')),
                ('buy_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_trades', to='order_book.order')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_trades', to=settings.AUTH_USER_MODEL)),
                ('sell_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_trades', to='order_book.order')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_trades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-executed_at'],
                'indexes': [models.Index(fields=['asset', 'executed_at'], name='order_book__asset_i_c30c83_idx'), models.Index(fields=['buyer', 'executed_at'], name='order_book__buyer_i_d023ec_idx'), models.Index(fields=['seller', 'executed_at'], name='order_book__seller__dd8320_idx')],
            },
        ),
        migrations.CreateModel(
            name='RiskLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_position_size', models.DecimalField(decimal_places=2, default=10000.0, help_text='Maximum size for a single position', max_digits=15)),
                ('max_order_size', models.DecimalField(decimal_places=2, default=5000.0, help_text='Maximum size for a single order', max_digits=15)),
                ('max_daily_loss', models.DecimalField(decimal_places=2, default=5000.0, help_text='Maximum loss allowed per day', max_digits=15)),
                ('max_daily_trades', models.IntegerField(default=100, help_text='Maximum number of trades per day')),
                ('max_open_orders', models.IntegerField(default=50, help_text='Maximum number of open orders')),
                ('leverage_limit', models.DecimalField(decimal_places=2, default=1.0, help_text='Maximum leverage multiplier', max_digits=5)),
                ('enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='order_book__user_id_437af5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('average_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order_book.asset')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='order_book.portfolio')),
            ],
            options={
                'indexes': [models.Index(fields=['portfolio', 'asset'], name='order_book__portfol_7f1d36_idx')],
                'unique_together': {('portfolio', 'asset')},
            },
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['user'], name='order_book__user_id_9f6074_idx'),
        ),
        migrations.AddIndex(
            model_name='backtestrun',
            index=models.Index(fields=['user', 'created_at'], name='order_book__user_id_ac863c_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='order_book__user_id_8787e6_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action', 'timestamp'], name='order_book__action_87ba2d_idx'),
        ),
    ]
